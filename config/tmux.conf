set -s escape-time 0
set -g mouse on
set -g default-terminal "screen-256color"

bind-key -n M-Q kill-session

# create window
set -g base-index 1
setw -g remain-on-exit on
bind-key -n M-` if-shell -b "[ \"$(tmux list-windows | wc -l)\" -lt 10 ]" new-window

# switch window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# create pane
bind-key -n M-g setw -q @splitdirection "-h"
bind-key -n M-v setw -q @splitdirection "-v"
  # read @splitdirection, falling back to -v (vertical); use it to split the window; then reset @splitdirection
bind-key -n M-Enter run -b "tmux split-window $(tmux showw -v @splitdirection 2>/dev/null || echo \"-v\"); tmux setw -q @splitdirection \"-v\""

# switch pane
 # Smart pane switching with awareness of Vim splits.
 # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l

# close pane
 # renumber windows after closing
bind-key -n M-q if-shell "$is_vim" "send-keys M-q" "run -b \"tmux kill-pane && tmux movew -r\""

# pane movement
bind-key -n M-K swap-pane -U
bind-key -n M-J swap-pane -D

# move pane between windows
bind-key -n M-! run -b "tmux select-pane -m && tmux join-pane -t :1"
bind-key -n M-@ run -b "tmux select-pane -m && tmux join-pane -t :2"
bind-key -n 'M-#' run -b "tmux select-pane -m && tmux join-pane -t :3"
bind-key -n 'M-$' run -b "tmux select-pane -m && tmux join-pane -t :4"
bind-key -n M-% run -b "tmux select-pane -m && tmux join-pane -t :5"
bind-key -n M-^ run -b "tmux select-pane -m && tmux join-pane -t :6"
bind-key -n M-& run -b "tmux select-pane -m && tmux join-pane -t :7"
bind-key -n M-* run -b "tmux select-pane -m && tmux join-pane -t :8"
bind-key -n M-( run -b "tmux select-pane -m && tmux join-pane -t :9"
bind-key -n M-) run -b "tmux select-pane -m && tmux join-pane -t :10"

# copy
bind-key -n M-[ copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
set-option -g default-command "reattach-to-user-namespace -l fish"
